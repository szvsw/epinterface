
[tool.poetry]
name = "epinterface"
version = "1.0.0"
description = "This is a repository for dynamically generating energy models within Python, relying on Archetypal and Eppy for most of its functionality."
authors = ["Sam Wolk <wolk.sam@gmail.com>"]
repository = "https://github.com/szvsw/epinterface"
documentation = "https://szvsw.github.io/epinterface/"
readme = "README.md"
packages = [
  {include = "epinterface"}
]

[tool.poetry.scripts]
epinterface = "epinterface.cli:cli"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
archetypal = "^2.18.4"
geopandas = "^1.0.1"
pydantic = "^2.9.2"
pandas = "^2.2.3"
httpx = "^0.27.2"
prisma = "^0.15.0"
click = "8.1.7"
openpyxl = "^3.1.5"

[tool.poetry.group.dev.dependencies]
pytest = "^8"
pytest-cov = "^4.0.0"
pyright = "^1.1.382"
pre-commit = "^3.4.0"
tox = "^4.11.1"
pandas-stubs = "^2.2.2.240909"
jupyter = "^1.1.1"
pyarrow = "^17.0.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.pyright]
include = ["epinterface"]
typeCheckingMode = "standard"
venvPath = "."
venv = ".venv"
ignore = ["epinterface/sbem/prisma/demo.py", "epinterface/sbem/parser.py"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
line-length = 88
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
    # Docs
    "D"
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["epinterface"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
